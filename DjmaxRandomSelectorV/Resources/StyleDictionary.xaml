<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="TransparentListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <Style x:Key="TransparentButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="HoverEffectTransparentButton" TargetType="{x:Type Button}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultGrayColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoFont}"/>
        <Setter Property="FontSize" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="BORDER"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center"
                                          VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="BORDER" Property="Background" Value="#3D3E3F"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="XMarkImage" TargetType="{x:Type Image}">
        <Setter Property="Source" Value="pack://application:,,,/Images/Close.png"/>
    </Style>
    <Style x:Key="GrayTextBlock" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource DefaultGrayColor}"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoFont}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <Style x:Key="BoldGrayTextBlock" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource GrayTextBlock}">
        <Setter Property="FontFamily" Value="{StaticResource LatoBlackFont}"/>
    </Style>

    <!--#region Filter-->
    <Style x:Key="ButtonTunesButton" TargetType="ToggleButton">
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid>
                        <Image x:Name="Image"
                               Source="{Binding Tag[0], RelativeSource={RelativeSource TemplatedParent}}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Image" Property="Source"
                                    Value="{Binding Tag[1], RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DifficultyButton" TargetType="ToggleButton">
        <Setter Property="FontFamily" Value="{StaticResource LatoBlackFont}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="OuterBorder"
                            BorderBrush="#5E5E5E"
                            BorderThickness="2">
                        <Border x:Name="Border"
                                Background="Transparent"
                                Margin="-1">
                            <TextBlock x:Name="TextBlock"
                                       Text="OFF"
                                       Foreground="#5E5E5E"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="BorderBrush"
                                    TargetName="OuterBorder"
                                    Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Background"
                                    TargetName="Border"
                                    Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Foreground"
                                    TargetName="TextBlock"
                                    Value="#242526"/>
                            <Setter Property="Text"
                                    TargetName="TextBlock"
                                    Value="ON"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CollaborationButton" TargetType="ToggleButton">
        <Setter Property="FontFamily" Value="{StaticResource LatoBlackFont}"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Margin" Value="8,0"/>
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Border"
                            Background="Transparent"
                            BorderBrush="#5E5E5E"
                            BorderThickness="2">
                        <TextBlock x:Name="TextBlock"
                                   Text="{TemplateBinding Content}"
                                   Foreground="#5E5E5E"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background"
                                    TargetName="Border"
                                    Value="#57000000"/>
                            <Setter Property="BorderBrush"
                                    TargetName="Border"
                                    Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Foreground"
                                    TargetName="TextBlock"
                                    Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="CategoryButton" TargetType="ToggleButton">
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontFamily" Value="{StaticResource BebasNeueFont}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultGrayColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Border x:Name="Border"
                            Background="{StaticResource DarkerTranslucentBackgroundColor}"
                            BorderThickness="0">
                        <Border x:Name="Border2"
                                Background="Transparent"
                                Padding="{TemplateBinding Padding}">
                            <TextBlock x:Name="TextBlock"
                                       Text="{TemplateBinding Content}"
                                       Foreground="{TemplateBinding Foreground}"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"
                                       Margin="0 2 0 0"/>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background"
                                    TargetName="Border"
                                    Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Foreground"
                                    TargetName="TextBlock"
                                    Value="Black"/>
                            <Setter Property="Background"
                                    TargetName="Border2"
                                    Value="{Binding BorderBrush, RelativeSource={RelativeSource TemplatedParent}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LevelButton" TargetType="Button">
        <Setter Property="ClickMode" Value="Press"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LeftArrowButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <Image Source="pack://application:,,,/Images/btn_left.png"
                               Width="12"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RightArrowButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="Transparent">
                        <Image Source="pack://application:,,,/Images/btn_right.png"
                               Width="12"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LevelIndicator" TargetType="Image">
        <Setter Property="Width" Value="18"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Source" Value="pack://application:,,,/Images/d_blk.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="LevelIndicatorYellow" TargetType="Image"
           BasedOn="{StaticResource LevelIndicator}">
        <Setter Property="Source" Value="pack://application:,,,/Images/d_ylw.png"/>
    </Style>
    <Style x:Key="LevelIndicatorOrange" TargetType="Image"
           BasedOn="{StaticResource LevelIndicator}">
        <Setter Property="Source" Value="pack://application:,,,/Images/d_org.png"/>
    </Style>
    <Style x:Key="LevelIndicatorRed" TargetType="Image"
           BasedOn="{StaticResource LevelIndicator}">
        <Setter Property="Source" Value="pack://application:,,,/Images/d_red.png"/>
    </Style>
    <Style x:Key="ScLevelIndicator" TargetType="Image">
        <Setter Property="Width" Value="18"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Source" Value="pack://application:,,,/Images/d_sck.png"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="ScLevelIndicatorRed" TargetType="Image"
           BasedOn="{StaticResource ScLevelIndicator}">
        <Setter Property="Source" Value="pack://application:,,,/Images/d_scr.png"/>
    </Style>
    <Style x:Key="ScLevelIndicatorPurple" TargetType="Image"
           BasedOn="{StaticResource ScLevelIndicator}">
        <Setter Property="Source" Value="pack://application:,,,/Images/d_scp.png"/>
    </Style>
    <Style x:Key="ScLevelIndicatorBlue" TargetType="Image"
           BasedOn="{StaticResource ScLevelIndicator}">
        <Setter Property="Source" Value="pack://application:,,,/Images/d_scb.png"/>
    </Style>
    <!--#endregion-->

    <!--#region Dialog-->
    <Style x:Key="DialogBar" TargetType="Grid">
        <Setter Property="Background" Value="#242424"/>
        <Setter Property="Height" Value="50"/>
    </Style>
    <Style x:Key="DialogTitle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource LatoFont}"/>
        <Setter Property="FontSize" Value="23"/>
        <Setter Property="Foreground" Value="{StaticResource HighlightYellowColor}"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="10,0,0,0"/>
    </Style>
    <Style x:Key="DialogButton" TargetType="Button">
        <Setter Property="Background" Value="#2D2D2D"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                            BorderThickness="0">
                        <TextBlock Text="{TemplateBinding Content}"
                                   Foreground="White"
                                   FontFamily="{StaticResource LatoBlackFont}"
                                   FontSize="{TemplateBinding FontSize}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DialogTabButton" TargetType="RadioButton">
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="Margin" Value="0,0,10,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid Background="#2D2D2D">
                        <TextBlock Text="{TemplateBinding Content}"
                                   Foreground="White"
                                   FontFamily="{StaticResource LatoBlackFont}"
                                   FontSize="15"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                        <Border x:Name="Highlight"
                                Height="3"
                                VerticalAlignment="Bottom"
                                Background="{StaticResource HighlightYellowColor}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter Property="Background" TargetName="Highlight" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Setting-->
    <Style x:Key="StyleClearBox" TargetType="{x:Type Border}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>
    <Style x:Key="StyleSettingBar" TargetType="{x:Type ItemsControl}">
        <Setter Property="Background" Value="{StaticResource ColorSettingBar}"/>
        <Setter Property="Foreground" Value="{StaticResource ColorDefault}"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="FontFamily" Value="{StaticResource FontDefaultBold}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeDefault}"/>
        <Setter Property="Margin" Value="{DynamicResource MarginSettingBar}"/>
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StyleSettingToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{StaticResource ColorDefault}"/>
        <Setter Property="FontFamily" Value="{StaticResource FontDefaultBold}"/>
        <Setter Property="FontSize" Value="{DynamicResource FontSizeDefault}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Style="{StaticResource StyleClearBox}">
                        <TextBlock x:Name="textBlock"
                                   Text="OFF"
                                   Foreground="{TemplateBinding Foreground}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Text"
                                    TargetName="textBlock"
                                    Value="ON"/>
                            <Setter Property="Foreground"
                                    TargetName="textBlock"
                                    Value="{StaticResource ColorSelected}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SettingBar" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{StaticResource SettingBarColor}"/>
        <Setter Property="Height" Value="30"/>
    </Style>
    <Style x:Key="SettingCategoryText" TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource BrighterTranslucentBackgroundColor}"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoFont}"/>
        <Setter Property="FontSize" Value="23"/>
    </Style>
    <Style x:Key="SettingToggleButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Foreground" Value="{StaticResource DefaultGrayColor}"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoBlackFont}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border Background="Transparent"
                            BorderThickness="0">
                        <TextBlock x:Name="textBlock"
                                   Text="OFF"
                                   Foreground="{TemplateBinding Foreground}"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Text"
                                    TargetName="textBlock"
                                    Value="ON"/>
                            <Setter Property="Foreground"
                                    TargetName="textBlock"
                                    Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SettingWindowButton" TargetType="{x:Type Button}">
        <Setter Property="BorderThickness" Value="3"/>
        <Setter Property="Border.CornerRadius" Value="6"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoBlackFont}"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="Margin" Value="10 0 0 0"/>
        <Setter Property="Padding" Value="5 0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{StaticResource DarkerTranslucentBackgroundColor}"
                            BorderBrush="#818282"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{TemplateBinding Border.CornerRadius}"
                            Padding="{TemplateBinding Padding}">
                        <TextBlock Text="{TemplateBinding Content}"
                                   Foreground="#818282"
                                   FontFamily="{TemplateBinding FontFamily}"
                                   FontSize="{TemplateBinding FontSize}"
                                   HorizontalAlignment="Center"
                                   VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region Setting Slider-->
    <Style x:Key="StyleSettingSliderRepeatButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StyleSettingSliderThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse Width="16"
                             Height="16"
                             Fill="White">
                    </Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="StyleSettingSlider" TargetType="{x:Type Slider}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="TrackBackground"
                                Background="{StaticResource SliderBackgroundColor}"
                                Margin="0"
                                Height="8"
                                Grid.Row="1">
                        </Border>
                        <Track Grid.Row="1"
                               x:Name="PART_Track">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource StyleSettingSliderRepeatButton}"
                                              Command="Slider.DecreaseLarge" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource StyleSettingSliderThumb}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource StyleSettingSliderRepeatButton}"
                                              Command="Slider.IncreaseLarge" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SliderButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SliderThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Ellipse Width="16"
                             Height="16"
                             Fill="White">
                    </Ellipse>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="SettingSlider" TargetType="{x:Type Slider}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Slider}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Border x:Name="TrackBackground"
                                Background="{StaticResource SliderBackgroundColor}"
                                Margin="0"
                                Height="8"
                                Grid.Row="1">
                        </Border>
                        <Track Grid.Row="1"
                               x:Name="PART_Track">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource SliderButton}"
                                              Command="Slider.DecreaseLarge" />
                            </Track.DecreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Style="{StaticResource SliderThumb}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource SliderButton}"
                                              Command="Slider.IncreaseLarge" />
                            </Track.IncreaseRepeatButton>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->

    <!--#region Playlist-->
    <Style x:Key="PlaylistScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="5"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PlaylistScrollBar" TargetType="{x:Type ScrollBar}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="0.00001*"/>
                        </Grid.RowDefinitions>
                        <Border Background="{StaticResource DarkerTranslucentBackgroundColor}"
                                CornerRadius="5"/>
                        <Track x:Name="PART_Track"
                               IsDirectionReversed="True">
                            <Track.Thumb>
                                <Thumb Style="{StaticResource PlaylistScrollBarThumb}"
                                       Background="#56FFFFFF"/>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PlaylistScrollViewer" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>
                        <Border Padding="{TemplateBinding Padding}">
                            <ScrollContentPresenter CanContentScroll="{TemplateBinding CanContentScroll}" />
                        </Border>
                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                   Grid.Column="1"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Style="{StaticResource PlaylistScrollBar}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                   Orientation="Horizontal"
                                   Grid.Row="1"
                                   Grid.Column="1"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!--#endregion-->
    
    <!--#region Popup-->
    <Style x:Key="PopupListBoxItem" TargetType="{x:Type ListBoxItem}">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="FontFamily" Value="{StaticResource LatoFont}"/>
        <Setter Property="Padding" Value="5 3"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <TextBlock Text="{Binding}"
                               TextWrapping="Wrap"
                               FontSize="{TemplateBinding FontSize}"
                               FontFamily="{TemplateBinding FontFamily}"
                               Padding="{TemplateBinding Padding}">
                        <TextBlock.Style>
                            <Style TargetType="{x:Type TextBlock}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#3D3E3F"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PopupListBox" TargetType="{x:Type ListBox}">
        <Setter Property="Foreground" Value="#9F9F9F"/>
        <Setter Property="Background" Value="#1F1F1F"/>
        <Setter Property="BorderBrush" Value="{StaticResource DefaultGrayColor}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
    </Style>
    <!--#endregion-->
    
</ResourceDictionary>